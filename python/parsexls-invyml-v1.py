import pandas as pd
import yaml
import ipaddress
from typing import Dict, List, Any, Union

def parse_excel_to_inventory(excel_file: str, output_file: str = 'inventory.yml') -> None:
    """
    –ü–∞—Ä—Å–∏—Ç Excel —Ñ–∞–π–ª –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç inventory.yml –¥–ª—è Ansible
    """
    try:
        # –ß—Ç–µ–Ω–∏–µ Excel —Ñ–∞–π–ª–∞
        df = pd.read_excel(excel_file)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤
        required_columns = ['Name', 'HostName', 'Ip-address']
        missing_columns = [col for col in required_columns if col not in df.columns]
        
        if missing_columns:
            raise ValueError(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å—Ç–æ–ª–±—Ü—ã: {', '.join(missing_columns)}")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã inventory
        inventory = {'all': {'hosts': {}}}
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏
        for index, row in df.iterrows():
            host_name = str(row['Name']).strip()
            hostname = str(row['HostName']).strip()
            ip_address = str(row['Ip-address']).strip()
            
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
            if not host_name or pd.isna(host_name):
                continue
            
            # –í–∞–ª–∏–¥–∞—Ü–∏—è IP-–∞–¥—Ä–µ—Å–∞ —Å –º–∞—Å–∫–æ–π
            try:
                network = ipaddress.ip_network(ip_address, strict=False)
                ip_without_mask = str(network.network_address)
            except ValueError as e:
                print(f"–û—à–∏–±–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ {index + 1}: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π IP-–∞–¥—Ä–µ—Å '{ip_address}' - {e}")
                continue
            
            # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è —Ö–æ—Å—Ç–∞
            host_vars = {
                'ansible_host': ip_without_mask,
                'ansible_user': 'admin'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            }
            
            if hostname and not pd.isna(hostname):
                host_vars['hostname'] = hostname
            
            inventory['all']['hosts'][host_name] = host_vars
        
        # –ó–∞–ø–∏—Å—å –≤ YAML —Ñ–∞–π–ª
        with open(output_file, 'w', encoding='utf-8') as f:
            yaml.dump(inventory, f, default_flow_style=False, allow_unicode=True, sort_keys=False)
        
        print(f"‚úÖ Inventory —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω: {output_file}")
        print(f"üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ö–æ—Å—Ç–æ–≤: {len(inventory['all']['hosts'])}")
        
    except FileNotFoundError:
        print(f"‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª '{excel_file}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: {e}")

# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è iterrows (–±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–∞—è)
def parse_excel_safe(excel_file: str, output_file: str = 'inventory.yml') -> None:
    """
    –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è iterrows
    """
    try:
        # –ß—Ç–µ–Ω–∏–µ Excel —Ñ–∞–π–ª–∞
        df = pd.read_excel(excel_file)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤
        required_columns = ['Name', 'HostName', 'Ip-address']
        for col in required_columns:
            if col not in df.columns:
                raise ValueError(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å—Ç–æ–ª–±–µ—Ü: {col}")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã inventory
        inventory = {'all': {'hosts': {}}}
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        for i in range(len(df)):
            try:
                host_name = str(df.iloc[i]['Name']).strip()
                if not host_name or host_name == 'nan':
                    continue
                    
                hostname = str(df.iloc[i]['HostName']).strip()
                ip_address = str(df.iloc[i]['Ip-address']).strip()
                
                # –í–∞–ª–∏–¥–∞—Ü–∏—è IP-–∞–¥—Ä–µ—Å–∞
                network = ipaddress.ip_network(ip_address, strict=False)
                ip_without_mask = str(network.network_address)
                
                # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è —Ö–æ—Å—Ç–∞
                host_vars = {
                    'ansible_host': ip_without_mask,
                    'ansible_user': 'admin'
                }
                
                if hostname and hostname != 'nan':
                    host_vars['hostname'] = hostname
                
                inventory['all']['hosts'][host_name] = host_vars
                
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ {i + 1}: {e}")
                continue
        
        # –ó–∞–ø–∏—Å—å –≤ YAML —Ñ–∞–π–ª
        with open(output_file, 'w', encoding='utf-8') as f:
            yaml.dump(inventory, f, default_flow_style=False, allow_unicode=True, sort_keys=False)
        
        print(f"‚úÖ Inventory —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω: {output_file}")
        print(f"üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ö–æ—Å—Ç–æ–≤: {len(inventory['all']['hosts'])}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ Excel —Ñ–∞–π–ª–∞
def create_sample_excel():
    """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–∏–º–µ—Ä Excel —Ñ–∞–π–ª–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    sample_data = {
        'Name': ['web-server-01', 'web-server-02', 'db-server-01'],
        'HostName': ['web01.local', 'web02.local', 'db01.local'],
        'Ip-address': ['192.168.1.10/24', '192.168.1.11/24', '192.168.1.20/24']
    }
    
    df = pd.DataFrame(sample_data)
    df.to_excel('hosts.xlsx', index=False)
    print("‚úÖ –°–æ–∑–¥–∞–Ω –ø—Ä–∏–º–µ—Ä —Ñ–∞–π–ª–∞: hosts.xlsx")

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    # create_sample_excel()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–µ—Ä (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–µ–∑–æ–ø–∞—Å–Ω—É—é –≤–µ—Ä—Å–∏—é –µ—Å–ª–∏ –ø–µ—Ä–≤–∞—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç)
    parse_excel_to_inventory('hosts.xlsx', 'inventory.yml')
    
    # –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—É—é –≤–µ—Ä—Å–∏—é:
    # parse_excel_safe('hosts.xlsx', 'inventory.yml')